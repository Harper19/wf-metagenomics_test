{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/epi2me-labs/wf-metagenomics/master/nextflow_schema.json",
    "title": "epi2me-labs/wf-metagenomics",
    "description": "General purpose metagenomics workflow using kraken2 or minimap2",
    "demo_url": "https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/wf-metagenomics-demo.tar.gz",
    "url": "https://github.com/epi2me-labs/wf-metagenomics",
    "type": "object",
    "definitions": {
        "input_options": {
            "title": "Input Options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "fastq": {
                    "type": "string",
                    "format": "path",
                    "description": "A fastq file or directory containing fastq input files or directories of input files.",
                    "help_text": "If directories named \\\"barcode*\\\" are found under the `--fastq` directory the data is assumed to be multiplex and each barcode directory will be processed independently. If `.fastq(.gz)` files are found under the `--fastq` directory the sample is assumed to not be multiplexed. In this second case `--samples` should be a simple name rather than a CSV file.",
                    "demo_data": "test_data"
                },
                "classifier": {
                    "type": "string",
                    "default": "kraken2",
                    "description": "Kraken2 or Minimap2 workflow to be used for classification of reads.",
                    "enum": [
                        "kraken2",
                        "minimap2"
                    ],
                    "help_text": "Use kraken2 for fast classification and minimap2 for more finer resolution, see read me for further info."
                },
                "analyse_unclassified": {
                    "type": "boolean",
                    "description": "Analyse unclassified reads from input directory. By default the workflow will not process reads in the unclassified directory.",
                    "help_text": "If selected and if the input is a multiplex directory the workflow will also process the unclassified directory."
                }
            },
            "required": [
                "fastq"
            ]
        },
        "sample_options": {
            "title": "Sample Options",
            "type": "object",
            "default": "",
            "properties": {
                "sample_sheet": {
                    "type": "string",
                    "format": "file-path",
                    "description": "A CSV file used to map barcodes to sample aliases. The sample sheet can be provided when the input data is a directory containing sub-directories with FASTQ files.",
                    "help_text": "The sample sheet is a CSV file with, minimally, columns named `barcode` , `sample_id`,  `alias`. Extra columns are allowed. A `type` column is required for certain workflows and should have the following values; `test_sample`, `positive_control`, `negative_control`, `no_template_control`."
                },
                "sample": {
                    "type": "string",
                    "description": "A single sample name for non-multiplexed data. Permissible if passing a single .fastq(.gz) file or directory of .fastq(.gz) files."
                }
            },
            "description": "Parameters that relate to samples such as sample sheets and sample names."
        },
        "reference_options": {
            "title": "Reference Options",
            "type": "object",
            "description": "Files will be downloaded as part of the first run of workflow and automatically stored for subsequent runs.",
            "default": "",
            "properties": {
                "taxonomy": {
                    "type": "string",
                    "format": "path",
                    "description": "Latest NCBI taxonomy file will be downloaded and used",
                    "help_text": "Change the default to use a different taxonomy file  [.tar.gz or Dir]."
                },
                "database_set": {
                    "type": "string",
                    "default": "ncbi_16s_18s",
                    "description": "Sets the reference, databases and taxonomy datasets that will be used for classifying reads. Choices: ['ncbi_16s_18s',ncbi_16s_18s_28s_ITS','PlusPF-8']",
                    "enum": [
                        "ncbi_16s_18s",
                        "ncbi_16s_18s_28s_ITS",
                        "PlusPF-8"
                    ],
                    "help_text": "To override set the taxonomy, database parameter for kraken2 or reference parameter for minimap2."
                },
                "store_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Where to store initial download of database.",
                    "default": "store_dir",
                    "help_text": "database set selected will be downloaded as part of the workflow and saved in this location, on subsequent runs it will use this as the database. "
                },
                "database_sets": {
                    "type": "object",
                    "hidden": true,
                    "description": "A map containing the available sources and their default resource paths"
                }
            }
        },
        "kraken2_options": {
            "title": "Kraken2 Options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "help_text": "\nKraken2\nIt is possible to enable classification by kraken2, \nand disable alignment which is a faster but coarser method of \nclassification reliant on the presence of a kraken2 database.\n",
            "properties": {
                "database": {
                    "type": "string",
                    "format": "path",
                    "description": "Not required but can be used to specifically override database [.tar.gz or Dir]",
                    "help_text": "By default uses database chosen in database_set parameter"
                },
                "bracken_dist": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Specifically override bracken kmer dist file",
                    "help_text": "A default kmer_dist is provided in database_set selected. Which was generated from the kraken database."
                },
                "bracken_length": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Set the length value bracken will use",
                    "minimum": 1,
                    "help_text": "Should be set to 1000 if using the default kmer file, or whatever length used to generate the kmer distribution file supplied."
                },
                "watch_path": {
                    "type": "boolean",
                    "description": "Specify if you want the workflow to continuously process input files as they become available in the input --fastq directories.",
                    "help_text": "See read_limit and run_indefinitely parameters for information on how to stop the watch_path. "
                },
                "read_limit": {
                    "type": "integer",
                    "description": "Use with watch_path if you don't want workflow to run indefinitely, will STOP pipeline when this number of reads have been processed.,",
                    "help_text": "Run indefinitely must be set to False for this parameter to be considered."
                },
                "run_indefinitely": {
                    "type": "boolean",
                    "description": "When used with watch_path will watch indefinitely if set to true",
                    "default": true,
                    "help_text": "See read_limit parameter if you set this to false."
                },
                "batch_size": {
                    "type": "integer",
                    "default": 0,
                    "description": "Maximum number of sequence records to process in a batch.",
                    "help_text": "Large files will be split such that batch_size records are processed together. Set to 0 to avoid rebatching input files. A value of 4000 is recommended to rebatch large files."
                },
                "port": {
                    "type": "integer",
                    "description": "Port number for the kraken server to use",
                    "default": 8080,
                    "help_text": "The workflow uses a server so the workflow only has to load the database once which will be available on this port for the duration of the workflow run."
                },
                "bracken_level": {
                    "type": "string",
                    "default": "S",
                    "description": "Set the level that bracken will estimate abundance at. Default: S (species). Other possible options are K (kingdom level), P (phylum), C (class), O (order), F (family), and G (genus).",
                    "enum": [
                        "S",
                        "G",
                        "k",
                        "F",
                        "O",
                        "C",
                        "P"
                    ]
                }
            },
            "description": "Kraken2 classification options. Only relevant if classifier parameter is set to kraken2"
        },
        "minimap2_options": {
            "title": "Minimap2 Options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "properties": {
                "reference": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Not required but can be used to specify a reference file [.fna]",
                    "help_text": "By default uses reference chosen in database_set parameter"
                },
                "minimap2filter": {
                    "type": "string",
                    "description": "Filter output of minimap2 by taxids inc. child nodes, E.g. \"9606,1404\"",
                    "help_text": "Provide a list of taxids if you are only interested in certain ones in your minimap2 analysis outputs."
                },
                "minimap2exclude": {
                    "type": "boolean",
                    "description": "Invert minimap2filter and exclude the given taxids instead",
                    "help_text": "Provide a list of taxids that you want to exclude from analysis outputs."
                },
                "ref2taxid": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Not required but can be used to specify a  ref2taxid mapping. Format is .tsv (refname  taxid), no header row.",
                    "help_text": "By default uses ref2taxid for option chosen in database_set parameter"
                },
                "split_prefix": {
                    "type": "boolean",
                    "description": "Enable if using a very large reference with minimap2",
                    "help_text": "If reference fasta large enough to require multipart index, set to true to use split-prefix option with minimap2. "
                }
            },
            "description": "Minimap2 classification options. Only relevant if classifier parameter is set to minimap2.",
            "help_text": "Minimap2\nThe default strategy is using minimap2 to perform full\nalignments against .fasta formatted references sequences. "
        },
        "output_options": {
            "title": "Output Options",
            "type": "object",
            "description": "Parameters for saving and naming workflow outputs.",
            "default": "",
            "properties": {
                "out_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "default": "output",
                    "description": "Directory for output of all user-facing files."
                }
            }
        },
        "advanced_options": {
            "title": "Advanced Options",
            "type": "object",
            "description": "Advanced options for configuring processes inside the workflow.",
            "default": "",
            "properties": {
                "min_len": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify read length lower limit",
                    "help_text": "Any reads shorter than this limit will not be included in the analysis."
                },
                "max_len": {
                    "type": "integer",
                    "description": "Specify read length upper limit",
                    "help_text": "Any reads longer than this limit will not be included in the analysis."
                },
                "threads": {
                    "type": "integer",
                    "default": 2,
                    "description": "Number of CPU threads used for classifying reads.",
                    "help_text": "For the real-time kraken2 workflow, this is the number of CPU threads used by the kraken2 server (and the number of clients sending reads to the server). For the minimap2 workflow, it is the number of CPU threads used by minimap2. For the real-time kraken2 workflow the `threads` parameter should not be set to no more than 4 fewer than the executor CPU limit."
                }
            }
        },
        "miscellaneous_options": {
            "title": "Miscellaneous Options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Everything else.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "disable_ping": {
                    "type": "boolean",
                    "description": "Enable to prevent sending a workflow ping.",
                    "hidden": true
                },
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "wfversion": {
                    "type": "string",
                    "description": "Workflow version.",
                    "default": "v2.0.3",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "aws_image_prefix": {
                    "type": "string",
                    "description": "aws image prefix.",
                    "hidden": true
                },
                "aws_queue": {
                    "type": "string",
                    "description": "aws queue.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_options"
        },
        {
            "$ref": "#/definitions/sample_options"
        },
        {
            "$ref": "#/definitions/reference_options"
        },
        {
            "$ref": "#/definitions/kraken2_options"
        },
        {
            "$ref": "#/definitions/minimap2_options"
        },
        {
            "$ref": "#/definitions/output_options"
        },
        {
            "$ref": "#/definitions/advanced_options"
        },
        {
            "$ref": "#/definitions/miscellaneous_options"
        }
    ],
    "properties": {
        "process_label": {
            "type": "string",
            "description": "The main process label for template processes to use by default",
            "hidden": true,
            "default": "wf-template"
        }
    },
    "docs": {
        "intro": "\n## Introduction\n\nwf-metagenomics offers two different approaches to assigning sequence reads to a species:\n\n### Kraken2 - Default\n\n[Kraken2](https://github.com/DerrickWood/kraken2) is used with the [Kraken2-server](https://github.com/epi2me-labs/kraken2-server) to offer the fastest method for classification of reads. [Bracken](https://github.com/jenniferlu717/Bracken) is then used to give a good estimate of species level abundance in the sample which can be visualised in the report. The Kraken2 workflow mode can be run in real time. See quickstart below for more details.\n\n### Minimap2 \n\n[Minimap2](https://github.com/lh3/minimap2) provides the finest resolution analysis but, depending on the reference database used, at the expense of significantly more compute time. Currently the minimap2 mode does not support real-time.\n\nThe wf-metagenomics workflow by default uses the NCBI 16S + 18S rRNA database that will be downloaded at the start of an analysis, there are expanded metagenomic database options available with the --source parameter but the workflow is not tied to this database and can also be used with custom databases as required.\n\n",
        "links": "## Useful links\n\n* [nextflow](https://www.nextflow.io/)\n* [docker](https://www.docker.com/products/docker-desktop)"
    }
}