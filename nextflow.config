//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    version = false
    fastq = null
    sample = null
    sample_sheet = null
    max_len = null
    min_len = 0
    taxonomy = null
    classifier = "kraken2"
    reference = null
    ref2taxid = null
    minimap2filter = null
    minimap2exclude = false
    split_prefix = false
    database = null
    bracken_dist = null
    bracken_length = null
    bracken_level = 'S'
    out_dir = "output"
    disable_ping = false
    threads = 2
    aws_image_prefix = null
    aws_queue = null
    batch_size = 0
    watch_path = false
    store_dir = "store_dir"
    read_limit = null
    port = 8080
    database_set = "ncbi_16s_18s"
    database_sets = [
        'ncbi_16s_18s': [
            'reference': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s/ncbi_targeted_loci_16s_18s.fna',
            'refindex': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s/ncbi_targeted_loci_16s_18s.fna.fai',
            'database': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s/ncbi_targeted_loci_kraken2.tar.gz',
            'kmer_dist': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s/database1000mers.kmer_distrib',
            'ref2taxid': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s/ref2taxid.targloci.tsv',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump_archive/taxdmp_2023-01-01.zip'
        ],
        'ncbi_16s_18s_28s_ITS': [
            'reference': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s_28s_ITS/ncbi_16s_18s_28s_ITS.fna',
            'refindex': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s_28s_ITS/ncbi_16s_18s_28s_ITS.fna.fai',
            'database': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s_28s_ITS/ncbi_16s_18s_28s_ITS_kraken2.tar.gz',
            'kmer_dist': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s_28s_ITS/database1000mers.kmer_distrib',
            'ref2taxid': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-metagenomics/ncbi_16s_18s_28s_ITS/ref2taxid.ncbi_16s_18s_28s_ITS.tsv',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump_archive/taxdmp_2023-01-01.zip'
        ],
        'PlusPF-8': [
            'database': 'https://genome-idx.s3.amazonaws.com/kraken/k2_pluspf_08gb_20221209.tar.gz',
            'taxonomy': 'https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump_archive/taxdmp_2022-09-01.zip'
        ]
    ]
    process_label = "wfmetagenomics"
    monochrome_logs = false
    validate_params = true
    show_hidden_params = false
    analyse_unclassified = false
    schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,pangolin_version,wf,process_label'

    wf {
        fastcat_stats = true
        example_cmd = [
            "--fastq test_data/barcode01/reads.fastq.gz",
      ]
        agent = null
        container_sha = "sha5edcddb612edbc67c9a1a827456def59c29035ce"
    }
}


manifest {
    name            = 'epi2me-labs/wf-metagenomics'
    author          = 'Oxford Nanopore Technologies'
    homePage        = 'https://github.com/epi2me-labs/wf-metagenomics'
    description     = 'Identification of the origin of single reads from both amplicon-targeted and shotgun metagenomics sequencing.'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    version         = 'v2.0.10'
}


executor {
    $local {
        cpus = 8
        memory = "8 GB"
    }
}

epi2melabs {
  tags = "metagenomics"
}

// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:wfmetagenomics {
        container = "ontresearch/wf-metagenomics:${params.wf.container_sha}"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }


    conda {
        conda.enabled = true
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wfmetagenomics {
                container = "${params.aws_image_prefix}-wf-metagenomics:${params.wf.container_sha}-root"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  overwrite = true
  file = "${params.out_dir}/execution/pipeline.svg"
}

env {
	PYTHONNOUSERSITE = 1
}
